using System;
using System.Windows.Forms;
using System.IO;

namespace sublight_sv
{
    public partial class MainForm : Form
    {
        public bool Lchkd;
        public bool Rchkd;

        private const string ScriptName = "script.avs";

        private ChkDialog _chkDialog;

        public MainForm()
        {
            InitializeComponent();
            playerText.Text = RegistryReader.GetName();
        }

        private void ChoosePlayer(object sender, EventArgs e)
        {
            openFileDialog.ShowDialog();
            playerText.Text = openFileDialog.FileName;
        }

        private void ChooseVideo(object sender, EventArgs e)
        {
            openFileDialog.ShowDialog();
            videoText.Text = openFileDialog.FileName;
        }

     
        private void CheckButtonClick(object sender, EventArgs e)
        {
            var t = new System.Threading.Thread(() =>
                                                    {
                                                        _chkDialog = new ChkDialog(this, Convert.ToInt16(portText.Text));
                                                        _chkDialog.StartSending();
                                                    });
            t.Start();
            t.Join();

            LcheckBox.Checked = Lchkd;
            RcheckBox.Checked = Rchkd;
            if (Lchkd)
                statusLabel.Text = @"Left is OK ";
            if (Rchkd)
                statusLabel.Text = @"Right is OK ";
            if (!Rchkd || !Lchkd)
            {
                statusLabel.Text = @"No clients connected ";
            }
            Application.DoEvents();

        }

        private void StartButtonClick(object sender, EventArgs e)
        {
            if (!Rchkd || !Lchkd)
            {
               var result = MessageBox.Show(@"Connection hasn't been ckecked yet. Continue?", @"Sublight server", 
                    MessageBoxButtons.OKCancel, MessageBoxIcon.Question);
               switch (result)
               {
                   case DialogResult.OK:
                       break;
                   case DialogResult.Cancel:
                       return;
               }
            }

            Launch();
        }

        private void Launch()
        {
            var file = new StreamWriter(ScriptName);

            file.WriteLine(@"# This script was automatically generated by Sublight Server");
            file.WriteLine(String.Format(@"LoadPlugin(""{0}\as_sublight.dll"")",
                                         Path.GetDirectoryName(Application.ExecutablePath)));
            file.WriteLine(String.Format(@"return Sublight(DirectShowSource(""{0}""), PORT={1}, IP=""{2}"")",
                                         videoText.Text,
                                         portText.Text,
                                         @"255.255.255.255"));
            file.Close();

            var prc = new System.Diagnostics.Process
                          {
                              StartInfo =
                                  {
                                      FileName = playerText.Text,
                                      Arguments = ScriptName
                                  }
                          };

            if (prc.StartInfo.FileName.Length == 0)
            {
                MessageBox.Show(@"Player was not selected", @"Sublight server", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            try
            {
                prc.Start();
            }
            catch (System.ComponentModel.Win32Exception)
            {
                MessageBox.Show(@"Invalid player filename", @"Sublight server", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
            prc.WaitForExit();
            prc.Close();

            File.Delete(ScriptName);
        }
    }
}
